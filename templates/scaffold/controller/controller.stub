<?php

namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_APP$\Http\Controllers\Controller;
use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\Redirect;
use App\Models\$MODEL_NAME$;
use Response;
use Inertia\Inertia;

class $MODEL_NAME$Controller extends Controller
{
    /**
     * Display a listing of the $MODEL_NAME$.
     *
     * @return Response
     */
    public function index()
    {
        $$MODEL_NAME_PLURAL_CAMEL$ = $MODEL_NAME$::filter(Request::all(["search", ...$MODEL_NAME$::$searchIn]))$FILTER_RELATION_WITH$->paginate();
        if (Request::has('only')) {
            return json_encode($$MODEL_NAME_PLURAL_CAMEL$->only('$PRIMARY_KEY_NAME$', 'name'));
        }
        return Inertia::render('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$/Index', [
            'filters' => Request::only(Common::$searchIn),
            '$MODEL_NAME_PLURAL_CAMEL$' => $$MODEL_NAME_PLURAL_CAMEL$,
            'host' => config('app.url'),
        ]);
    }

    /**
     * Show the form for creating a new $MODEL_NAME$.
     *
     * @return Response
     */
    public function create()
    {
        return Inertia::render('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$/Create');
    }

    /**
     * Store a newly created $MODEL_NAME$ in storage.
     *
     * @return Response
     */
    public function store()
    {
        $MODEL_NAME$::create(Request::validate($MODEL_NAME$::$rules));
        return Redirect::route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.index')->with('success', '$MODEL_NAME$ created.');
    }

    /**
     * Show the form for editing the specified $MODEL_NAME$.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @return Response
     */
    public function edit($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        return Inertia::render('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$/Edit', [
            'data' => [
                $RESOURCE_FIELDS$
            ],
        ]);
    }

    /**
     * Update the specified $MODEL_NAME$ in storage.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @return Response
     */
    public function update($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->update(Request::validate($MODEL_NAME$::$rules));
        return Redirect::back()->with('success', '$MODEL_NAME$ updated.');
    }

    /**
     * Remove the specified $MODEL_NAME$ from storage.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @throws \Exception
     *
     * @return Response
     */
    public function destroy($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->delete();
        return Redirect::back()->with('success', '$MODEL_NAME$ updated.');
    }
}

<?php

namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_APP$\Http\Controllers\Controller;
use Illuminate\Support\Facades\Request;
use Illuminate\Support\Facades\Redirect;
use App\Models\$MODEL_NAME$;
use Response;
use Inertia\Inertia;

class $MODEL_NAME$Controller extends Controller
{
    /**
     * Display a listing of the $MODEL_NAME$.
     *
     * @param Request $request
     *
     * @return Response
     */
    public function index(Request $request)
    {
        $data = $MODEL_NAME$::filter(Request::only('search', 'trashed'))->paginate();
        return Inertia::render('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$/Index', [
            'filters' => Request::all('search', 'trashed'),
            'data' => $data,
        ]);
    }

    /**
     * Show the form for creating a new $MODEL_NAME$.
     *
     * @return Response
     */
    public function create()
    {
        return view('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.Create');
    }

    /**
     * Store a newly created $MODEL_NAME$ in storage.
     *
     * @param Request $request
     *
     * @return Response
     */
    public function store()
    {
        $MODEL_NAME$::create(
            Request::validate($MODEL_NAME$::$rules)
        );
        return Redirect::route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.Index')->with('success', '$MODEL_NAME$ created.');
        
    }

    /**
     * Show the form for editing the specified $MODEL_NAME$.
     *
     * @param int $id
     *
     * @return Response
     */
    public function edit($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        return Inertia::render('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$/Edit', [
            'data' => [
                $RESOURCE_FIELDS$
            ],
        ]);
       
    }

    /**
     * Update the specified $MODEL_NAME$ in storage.
     *
     * @param int $id
     * @param Update$MODEL_NAME$Request $request
     *
     * @return Response
     */
    public function update($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->update(
            Request::validate($MODEL_NAME$::$rules)
        );
        return Redirect::back()->with('success', '$MODEL_NAME$ updated.');
    }

    /**
     * Remove the specified $MODEL_NAME$ from storage.
     *
     * @param int $id
     *
     * @throws \Exception
     *
     * @return Response
     */
    public function destroy($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->delete();
        return Redirect::back()->with('success', '$MODEL_NAME$ updated.');
    }
}

<?php

namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_APP$\Http\Controllers\Controller;
use App\Models\$MODEL_NAME$;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\Request;
use Inertia\Inertia;
use Response;

class $MODEL_NAME$Controller extends Controller
{
    /**
     * Display a listing of the $MODEL_NAME$.
     *
     * @return \Inertia\Response|Response|string|bool
     */
    public function index()
    {
        $$MODEL_NAME_PLURAL_CAMEL$ = $MODEL_NAME$::filter(Request::all(["search", ...$MODEL_NAME$::$searchIn]))$FILTER_RELATION_WITH$
            ->orderBy(Request::input('orderBy') ?? 'id', Request::input('dir') ?? 'asc');
        
        if (Request::has('only')) {
            return json_encode($$MODEL_NAME_PLURAL_CAMEL$->cursorPaginate(Request::input('per_page'),['$PRIMARY_KEY_NAME$', 'name']));
        }

        return Inertia::render('$VIEW_PREFIX1$$MODEL_NAME_PLURAL_SNAKE$/Index', [
            'filters' => Request::only(["search", ...$MODEL_NAME$::$searchIn, 'orderBy', 'dir']),
            'datas' => $$MODEL_NAME_PLURAL_CAMEL$
                ->paginate(Request::input('per_page'))
                ->withQueryString(),
        ]);
    }

    /**
     * Show the form for creating a new $MODEL_NAME$.
     *
     * @return \Inertia\Response|Response|string|bool
     */
    public function create()
    {
        return Inertia::render('$VIEW_PREFIX1$$MODEL_NAME_PLURAL_SNAKE$/Create', ['host' => config('app.url')]);
    }

    /**
     * Store a newly created $MODEL_NAME$ in storage.
     *
     * @return \Inertia\Response|Response|string|bool
     */
    public function store()
    {
        $rule = $MODEL_NAME$::$rules;
        $input =  Request::validate($rule);
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::create($input);
        return redirect(Request::header('back') ?? route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.show', $$MODEL_NAME_CAMEL$->getKey()))->with('success', 'Амжилттай үүсгэлээ.');
    }

    /**
     * Show the form for editing the specified UserModel.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @return \Inertia\Response|Response|string|bool
     */
    public function show($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$$LOAD_RELATION_WITH$;
        return Inertia::render('$VIEW_PREFIX1$$MODEL_NAME_PLURAL_SNAKE$/Show', [
            'data' =>  $$MODEL_NAME_CAMEL$,
        ]);
    }

    /**
     * Show the form for editing the specified $MODEL_NAME$.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @return \Inertia\Response|Response|string|bool
     */
    public function edit($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$$LOAD_RELATION_WITH$;
        return Inertia::render('$VIEW_PREFIX1$$MODEL_NAME_PLURAL_SNAKE$/Edit', [
            'data' =>  $$MODEL_NAME_CAMEL$,
        ]);
    }

    /**
     * Update the specified $MODEL_NAME$ in storage.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @return \Inertia\Response|Response|string|bool
     */
    public function update($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $rule = $MODEL_NAME$::$rules;
        $input =  Request::validate($rule);
        $$MODEL_NAME_CAMEL$->update($input);
        
        return redirect(Request::header('back') ?? route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.show', $$MODEL_NAME_CAMEL$->getKey()))->with('success', 'Ажилттай хадгаллаа.');
    }

    /**
     * Remove the specified $MODEL_NAME$ from storage.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @throws \Exception
     *
     * @return \Inertia\Response|Response|string|bool
     */
    public function destroy($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->delete();
        return redirect(Request::header('back') ?? route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.index'))->with('success', 'Мэдээлэл устгагдлаа.');
    }
}

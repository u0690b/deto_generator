<?php

namespace $NAMESPACE_MODEL$;

$SOFT_DELETE_IMPORT$
$HAS_FACTORY_IMPORT$

$DOCS$
class $MODEL_NAME$ extends Model
{
$SOFT_DELETE$
$HAS_FACTORY$
    public $table = '$TABLE_NAME$';
    $TIMESTAMPS$
$SOFT_DELETE_DATES$
$CONNECTION$
$PRIMARY$
    public $fillable = [
        $FIELDS$
    ];

    /**
     * The attributes that should be casted to native types.
     *
     * @var array
     */
    protected $casts = [
        $CAST$
    ];

    /**
     * Validation rules
     *
     * @var array
     */
    public static $rules = [
        $RULES$
    ];

    $RELATIONS$

    /**
     * @var array
     */
    public static $searchIn = [
        $SEARCHABLE_FIELDS$
    ];

    /**
    * Filter Model
    * param Array $filters
    * return $MODEL_NAME$
    */
    public function scopeFilter(Builder $query, array $filters)
    {
        if (count($filters)) {
            foreach ($filters as $key => $value) {
                if (! $value) {
                    continue;
                }
                if ($key === 'search') {
                    $this->buildSearch($query, $filters['search']??'', $MODEL_NAME$::$searchIn);
                } elseif (in_array($key, $MODEL_NAME$::$searchIn)) {
                    $query->where($key, $value);
                }
            }
        }
    }
}

<?php

namespace $NAMESPACE_API_CONTROLLER$;


use $NAMESPACE_MODEL$\$MODEL_NAME$;
use Illuminate\Http\Request;
use $NAMESPACE_APP$\Http\Controllers\AppBaseController;
use Response;

$DOC_CONTROLLER$
class $MODEL_NAME$APIController extends AppBaseController
{
    $DOC_INDEX$
    public function index(Request $request)
    {
        $query = $MODEL_NAME$::filter( $request->all(["search", ...$MODEL_NAME$::$searchIn]))$FILTER_RELATION_WITH$;

        if ($request->get('skip')) {
            $query->skip($request->get('skip'));
        }
        if ($request->get('limit')) {
            $query->limit($request->get('limit'));
        }

        $$MODEL_NAME_PLURAL_CAMEL$ = $query->get();

        return $$MODEL_NAME_PLURAL_CAMEL$->toJson();
    }

    $DOC_STORE$
    public function store(Request $request)
    {
        $input = $request->validate($MODEL_NAME$::$rules);

        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::create($input);

        return $$MODEL_NAME_CAMEL$->toJson();
    }

    $DOC_SHOW$
    public function show($id)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::find($id);

        if (empty($$MODEL_NAME_CAMEL$)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        return $$MODEL_NAME_CAMEL$->toJson();
    }

    $DOC_UPDATE$
    public function update($id, Request $request)
    {
        $input = $request->validate($MODEL_NAME$::$rules);
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::find($id);

        if (empty($$MODEL_NAME_CAMEL$)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        $$MODEL_NAME_CAMEL$->fill($input);
        $$MODEL_NAME_CAMEL$->save();

        return $$MODEL_NAME_CAMEL$->toJson();
    }

    $DOC_DESTROY$
    public function destroy($id)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::find($id);

        if (empty($$MODEL_NAME_CAMEL$)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        $$MODEL_NAME_CAMEL$->delete();

        return $this->sendSuccess('$MODEL_NAME_HUMAN$ deleted successfully');
    }
}
